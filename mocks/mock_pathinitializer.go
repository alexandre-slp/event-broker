// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/alexandre-slp/event-broker/app/api (interfaces: PathInitializer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	api "github.com/alexandre-slp/event-broker/app/api"
	gomock "github.com/golang/mock/gomock"
)

// MockPathInitializer is a mock of PathInitializer interface.
type MockPathInitializer struct {
	ctrl     *gomock.Controller
	recorder *MockPathInitializerMockRecorder
}

// MockPathInitializerMockRecorder is the mock recorder for MockPathInitializer.
type MockPathInitializerMockRecorder struct {
	mock *MockPathInitializer
}

// NewMockPathInitializer creates a new mock instance.
func NewMockPathInitializer(ctrl *gomock.Controller) *MockPathInitializer {
	mock := &MockPathInitializer{ctrl: ctrl}
	mock.recorder = &MockPathInitializerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPathInitializer) EXPECT() *MockPathInitializerMockRecorder {
	return m.recorder
}

// InitPaths mocks base method.
func (m *MockPathInitializer) InitPaths(arg0 api.Router) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitPaths", arg0)
}

// InitPaths indicates an expected call of InitPaths.
func (mr *MockPathInitializerMockRecorder) InitPaths(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitPaths", reflect.TypeOf((*MockPathInitializer)(nil).InitPaths), arg0)
}
