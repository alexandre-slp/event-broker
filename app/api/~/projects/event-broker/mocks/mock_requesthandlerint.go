// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/alexandre-slp/event-broker/app/api (interfaces: RequestHandlerInt)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	fasthttp "github.com/valyala/fasthttp"
)

// MockRequestHandlerInt is a mock of RequestHandlerInt interface.
type MockRequestHandlerInt struct {
	ctrl     *gomock.Controller
	recorder *MockRequestHandlerIntMockRecorder
}

// MockRequestHandlerIntMockRecorder is the mock recorder for MockRequestHandlerInt.
type MockRequestHandlerIntMockRecorder struct {
	mock *MockRequestHandlerInt
}

// NewMockRequestHandlerInt creates a new mock instance.
func NewMockRequestHandlerInt(ctrl *gomock.Controller) *MockRequestHandlerInt {
	mock := &MockRequestHandlerInt{ctrl: ctrl}
	mock.recorder = &MockRequestHandlerIntMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestHandlerInt) EXPECT() *MockRequestHandlerIntMockRecorder {
	return m.recorder
}

// InitRequestHandler mocks base method.
func (m *MockRequestHandlerInt) InitRequestHandler() func(*fasthttp.RequestCtx) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitRequestHandler")
	ret0, _ := ret[0].(func(*fasthttp.RequestCtx))
	return ret0
}

// InitRequestHandler indicates an expected call of InitRequestHandler.
func (mr *MockRequestHandlerIntMockRecorder) InitRequestHandler() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitRequestHandler", reflect.TypeOf((*MockRequestHandlerInt)(nil).InitRequestHandler))
}
